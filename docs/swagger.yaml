openapi: 3.0.0
info:
  title: Notify API
  version: 1.0.0
  description: Full backend documentation for authentication, user, and post management

servers:
  - url: http://localhost:5000/api/v1

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:

  /auth/login:
    post:
      tags: [Auth]
      summary: Login user with username/email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login successful
        401:
          description: Invalid credentials

  /auth/logout:
    get:
      tags: [Auth]
      summary: Logout user
      security:
        - bearerAuth: []
      responses:
        200:
          description: Logged out

  /auth/current-user:
    get:
      tags: [Auth]
      summary: Get current logged-in user
      security:
        - bearerAuth: []
      responses:
        200:
          description: User profile

  /auth/change-password:
    post:
      tags: [Auth]
      summary: Change current user's password
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - oldPassword
                - newPassword
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        200:
          description: Password changed

  /auth/update-account-details:
    patch:
      tags: [Auth]
      summary: Update current user's profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
      responses:
        200:
          description: Account updated

  /auth/refresh-tokens:
    post:
      tags: [Auth]
      summary: Refresh JWT tokens
      security:
        - bearerAuth: []
      responses:
        200:
          description: Tokens refreshed

  /auth/google:
    get:
      tags: [Auth]
      summary: Start Google OAuth login
      responses:
        302:
          description: Redirect to Google

  /auth/google/callback:
    get:
      tags: [Auth]
      summary: Google OAuth callback
      responses:
        200:
          description: Success or redirect

  /auth/seed-admin:
    post:
      tags: [Auth]
      summary: Create initial admin user
      responses:
        201:
          description: Admin seeded

  /users/register:
    post:
      tags: [Users]
      summary: Register a new user (Admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
                - role
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
      responses:
        201:
          description: User registered

  /users/all-usernames:
    get:
      tags: [Users]
      summary: Get all usernames (Admin only)
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of usernames

  /users/update-user-role:
    post:
      tags: [Users]
      summary: Update user role (Admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - role
              properties:
                userId:
                  type: string
                role:
                  type: string
      responses:
        200:
          description: Role updated

  /post/create-post:
    post:
      tags: [Posts]
      summary: Create a new post (admin/member)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - content
                - postMedia
              properties:
                title:
                  type: string
                content:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
                postMedia:
                  type: string
                  format: binary
      responses:
        201:
          description: Post created

  /post/get-all-posts:
    get:
      tags: [Posts]
      summary: Get all posts (any user)
      security:
        - bearerAuth: []
      responses:
        200:
          description: All posts returned

  /post/getpost/{username}/{postNumber}:
    get:
      tags: [Posts]
      summary: Get specific post
      security:
        - bearerAuth: []
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: postNumber
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Post found

  /post/getpost/{username}:
    get:
      tags: [Posts]
      summary: Get all posts by a user
      security:
        - bearerAuth: []
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: User's posts found

  /post/updatepost/{username}/{postNumber}:
    patch:
      tags: [Posts]
      summary: Update a post
      security:
        - bearerAuth: []
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: postNumber
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
      responses:
        200:
          description: Post updated

  /post/deletepost/{username}/{postNumber}:
    delete:
      tags: [Posts]
      summary: Delete a post
      security:
        - bearerAuth: []
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: postNumber
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Post deleted
